output_dir: ./ # /tmp may be deleted by your system. Change it to your preference.

# Model Arguments
model:
  _component_: torchtune.models.llama3_2.llama3_2_1b

tokenizer:
  _component_: torchtune.models.llama3.llama3_tokenizer
  path:  huggingface/hub/models--meta-llama--Llama-3.2-1B-Instruct/tokenizer.model
  max_seq_len: null

#tokenizer:
#  _component_: transformers.AutoTokenizer.from_pretrained
#  pretrained_model_name_or_path: meta-llama/Llama-3.2-1B-Instruct

# Dataset
dataset:
  _component_: torchtune.datasets.instruct_dataset
  packed: False  # True increases speed
  source: json
  data_files: multistep_arithmetic_train_instruct.json
  column_map:
    input: question
    output: answer
  #new_system_prompt: "Cutting Knowledge Date: December 2023\nToday Date: 05 Feb 2025"
seed: null
shuffle: True

checkpointer:
  _component_: torchtune.training.FullModelHFCheckpointer
  checkpoint_dir: huggingface/hub/models--meta-llama--Llama-3.2-1B-Instruct/
  checkpoint_files: [
    model.safetensors
  ]
  recipe_checkpoint: null
  output_dir: ${output_dir}/checkpoints/${job_id}
  model_type: LLAMA3_2
resume_from_checkpoint: False

# Fine-tuning arguments
batch_size: 4
epochs: 2 #max number of epochs
optimizer:
  _component_: bitsandbytes.optim.PagedAdamW8bit
  lr: 1e-5
loss:
  _component_: torchtune.modules.loss.CEWithChunkedOutputLoss
max_steps_per_epoch: null
gradient_accumulation_steps: 1  # Use to increase effective batch size
optimizer_in_bwd: True  # True saves memory. Requires gradient_accumulation_steps=1
compile: False  # torch.compile the model + loss, True increases speed + decreases memory

# Training environment
device: cuda:0

# Memory management
enable_activation_checkpointing: False  # True reduces memory
enable_activation_offloading: False  # True reduces memory

# Reduced precision
dtype: bf16

# Logging
metric_logger:
  _component_: torchtune.training.metric_logging.WandBLogger
  project: bigbench_mistake
  entity: 
  name: ${job_id}
log_every_n_steps: 1
log_peak_memory_stats: True

# Profiler (disabled)
profiler:
  _component_: torchtune.training.setup_torch_profiler
  enabled: False

  #Output directory of trace artifacts
  output_dir: ${output_dir}/profiling_outputs/${job_id}

  #`torch.profiler.ProfilerActivity` types to trace
  cpu: True
  cuda: True

  #trace options passed to `torch.profiler.profile`
  profile_memory: False
  with_stack: False
  record_shapes: True
  with_flops: False

  # `torch.profiler.schedule` options:
  # wait_steps -> wait, warmup_steps -> warmup, active_steps -> active, num_cycles -> repeat
  wait_steps: 5
  warmup_steps: 3
  active_steps: 2
  num_cycles: 1
job_id: 1B_mistake_baseline